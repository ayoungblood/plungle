# .github/workflows/build.yml
# Based on https://github.com/open-contracting/cardinal-rs/blob/main/.github/workflows/release.yml

name: Build and Release
on:
    pull_request:
    push:
        branches:
        - main
        - gh-actions

jobs:
  release:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - env:
          GH_TOKEN: ${{ github.token }}
        run: gh release delete-asset ${{ github.ref_name }} ${{ github.ref_name }}.zip || true
      - env:
          GH_TOKEN: ${{ github.token }}
        run: gh release create ${{ github.ref_name }}
  assets:
    needs: release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # 32-bit (i686)
          - build: linux-32-bit
            os: ubuntu-latest
            target: i686-unknown-linux-gnu
            command: cross
          - build: windows-32-bit
            os: ubuntu-latest
            target: i686-pc-windows-gnu
            command: cross
          # 64-bit (x86)
          - build: linux-64-bit
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            command: cross
          - build: macos-64-bit
            os: macos-latest
            target: x86_64-apple-darwin
            command: cargo
          - build: windows-64-bit
            os: ubuntu-latest
            target: x86_64-pc-windows-gnu
            command: cross
          # 64-bit (ARM)
          - build: macos-arm
            os: macos-latest
            target: aarch64-apple-darwin
            command: cargo
          - build: linux-arm
            os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            command: cross
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          targets: ${{ matrix.target }}
      - run: cargo install cross --git https://github.com/cross-rs/cross
      - env:
          RUSTFLAGS: -Zon-broken-pipe=kill
        run: ${{ matrix.command }} build --release --verbose --target ${{ matrix.target }}
      - name: Create archive
        id: archive
        shell: bash
        run: |
          DIRECTORY="plungle-${{ github.ref_name }}-${{ matrix.build }}"
          if [[ "${{ matrix.target }}" =~ "-pc-windows-" ]]; then
            SUFFIX=".exe"
          else
            SUFFIX=""
          fi
          mkdir "$DIRECTORY"
          cp LICENSE README.md "target/${{ matrix.target }}/release/plungle$SUFFIX" "$DIRECTORY"
          7z a "$DIRECTORY.zip" "$DIRECTORY"
          echo "path=$DIRECTORY.zip" >> $GITHUB_OUTPUT
      - env:
          GH_TOKEN: ${{ github.token }}
        run: gh release upload ${{ github.ref_name }} ${{ steps.archive.outputs.path }}
